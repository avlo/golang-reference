def'n:
	- closure property is used extensively where data isolation is required. The state provided by the closures makes them immensely helpful in that regard. When we want to create a state encapsulated function we use closures to do that.

	-	a closure is a record storing a function together with an environment

	- whereas an object is data that has one or more functions bound to it, a closure is a function that has one or more variables bound to it.

	- closure as a function inside of another function. 
		- The closure can refer to any of the outer function's local variables
		-	the compiler detects that and moves these variables from the outer function's stack space to the closure's hidden object declaration. 
		- You then have a variable of a closure type
			even though it's basically an object under the hood, you pass it around as a function reference, because the focus is on its nature as a function.	

	-  You can see a closure as an object with only one method, and an arbitrary object as a collection of closures over some common underlying data (the object's member variables)
