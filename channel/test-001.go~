package main

import (
	"fmt"
	"time"
)

func hello(done chan bool) {
	fmt.Println("in goroutine: job takes 2 seconds")
	time.Sleep(time.Second * 2)
	fmt.Println("in goroutine: job done, write to channel")
	done <- true
}

func main() {
	done := make(chan bool)
	fmt.Println("in main: spawn goroutine")
	go hello(done)
	// <-done
	// done <- true
	fmt.Println("in main: read from channel")
	<-done // read is blocking, so the next line of code won't execute until
	// channel is written to (line 10)
	fmt.Println("in main: channel read complete")
	fmt.Println("in main: end")
}
